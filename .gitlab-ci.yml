stages:
  - build
  - push
  - clean
  - deploy

build_image:
  stage: build
  script:
    - docker build -t $CI_PROJECT_NAME:$CI_PIPELINE_ID .

push_latest:
  stage: push
  only:
    - master
  script:
    - docker tag $CI_PROJECT_NAME:$CI_PIPELINE_ID registry.axiom/$CI_PROJECT_NAME:latest
    - docker push registry.axiom/$CI_PROJECT_NAME:latest

push_tag:
  stage: push
  only:
    - tags
  script:
    - docker tag $CI_PROJECT_NAME:$CI_PIPELINE_ID registry.axiom/$CI_PROJECT_NAME:$CI_BUILD_TAG
    - docker push registry.axiom/$CI_PROJECT_NAME:$CI_BUILD_TAG
    - docker tag $CI_PROJECT_NAME:$CI_PIPELINE_ID registry.axiom/$CI_PROJECT_NAME:prod
    - docker push registry.axiom/$CI_PROJECT_NAME:prod

clean_latest:
  stage: clean
  only:
    - master
  script:
    - docker rmi --no-prune $CI_PROJECT_NAME:$CI_PIPELINE_ID
    - docker rmi --no-prune registry.axiom/$CI_PROJECT_NAME:latest

clean_tag:
  stage: clean
  only:
    - tags
  script:
    - docker rmi --no-prune $CI_PROJECT_NAME:$CI_PIPELINE_ID
    - docker rmi --no-prune registry.axiom/$CI_PROJECT_NAME:$CI_BUILD_TAG
    - docker rmi --no-prune registry.axiom/$CI_PROJECT_NAME:prod

deploy_prod:
  stage: deploy
  environment: production
  only:
    - master
  script:
    - docker run --rm registry.axiom/ansible ap apps-prod $CI_PROJECT_NAME --tags deploy
